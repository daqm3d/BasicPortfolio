---
import { basics } from '@/jsons/cv-AP.json';
const { profiles } = basics;

const ICONS = {
  GitHub: `<svg
  xmlns="http://www.w3.org/2000/svg"
  width="15"
  height="15"
  viewBox="0 0 24 24"
  style="margin-right: 10px;"
>
  <title>SVG del logo de GitHub</title>
  <path
    fill-rule="evenodd"
    clip-rule="evenodd"
    d="M12.026 2c-5.509 0-9.974 4.465-9.974 9.974 0 4.406 2.857 8.145 6.821 9.465.499.09.679-.217.679-.481 0-.237-.008-.865-.011-1.696-2.775.602-3.361-1.338-3.361-1.338-.452-1.152-1.107-1.459-1.107-1.459-.905-.619.069-.605.069-.605 1.002.07 1.527 1.028 1.527 1.028.89 1.524 2.336 1.084 2.902.829.091-.645.351-1.085.635-1.334-2.214-.251-4.542-1.107-4.542-4.93 0-1.087.389-1.979 1.024-2.675-.101-.253-.446-1.268.099-2.64 0 0 .837-.269 2.742 1.021a9.582 9.582 0 0 1 2.496-.336 9.554 9.554 0 0 1 2.496.336c1.906-1.291 2.742-1.021 2.742-1.021.545 1.372.203 2.387.099 2.64.64.696 1.024 1.587 1.024 2.675 0 3.833-2.33 4.675-4.552 4.922.355.308.675.916.675 1.846 0 1.334-.012 2.41-.012 2.737 0 .267.178.577.687.479C19.146 20.115 22 16.379 22 11.974 22 6.465 17.535 2 12.026 2z"
  ></path>
</svg`,
  LinkedIn: `<svg
  xmlns="http://www.w3.org/2000/svg"
  width="15"
  height="15"
  viewBox="0 0 24 24"
  style="margin-right: 10px;"
>
<title>SVG del logo de LinkdIn</title>
  <circle cx="4.983" cy="5.009" r="2.188"></circle>
  <path
    d="M9.237 8.855v12.139h3.769v-6.003c0-1.584.298-3.118 2.262-3.118 1.937 0 1.961 1.811 1.961 3.218v5.904H21v-6.657c0-3.27-.704-5.783-4.526-5.783-1.835 0-3.065 1.007-3.568 1.96h-.051v-1.66H9.237zm-6.142 0H6.87v12.139H3.095z"
  ></path>
</svg>`,
  Menu: `<svg 
  xmlns="http://www.w3.org/2000/svg" 
  width="20" 
  height="20" 
  viewBox="0 0 24 24" 
  style="margin-right: 10px;">
  <path d="M4 6h16v2H4zm0 5h16v2H4zm0 5h16v2H4z"></path>
</svg>`,
  Printer: `<svg 
  xmlns="http://www.w3.org/2000/svg" 
  width="20" 
  height="20" 
  viewBox="0 0 24 24" 
  style="margin-right: 10px;" >
  <path d="M19 7h-1V2H6v5H5c-1.654 0-3 1.346-3 3v7c0 1.103.897 2 2 
  2h2v3h12v-3h2c1.103 0 2-.897 2-2v-7c0-1.654-1.346-3-3-3zM8 
  4h8v3H8V4zm8 16H8v-4h8v4zm4-3h-2v-3H6v3H4v-7c0-.551.449-1 1-1h14c.552 0
  1 .449 1 1v7z"></path><path d="M14 10h4v2h-4z"></path>
/svg>`,
  Light: `<svg 
  xmlns="http://www.w3.org/2000/svg" 
  width="15" 
  height="15" 
  viewBox="0 0 24 24"
  style="margin-right: 10px;" >
  <path d="M6.995 12c0 2.761 2.246 5.007 5.007 5.007s5.007-2.246 
  5.007-5.007-2.246-5.007-5.007-5.007S6.995 9.239 6.995 12zM11 
  19h2v3h-2zm0-17h2v3h-2zm-9 9h3v2H2zm17 0h3v2h-3zM5.637 
  19.778l-1.414-1.414 2.121-2.121 1.414 1.414zM16.242 6.344l2.122-2.122 
  1.414 1.414-2.122 2.122zM6.344 7.759 4.223 5.637l1.415-1.414 2.12 
  2.122zm13.434 10.605-1.414 1.414-2.122-2.122 1.414-1.414z"></path>
</svg>`,
  Dark: `<svg 
  xmlns="http://www.w3.org/2000/svg" 
  width="15" 
  height="15" 
  viewBox="0 0 24 24"
  style="margin-right: 10px;" >
  <path d="M12 11.807A9.002 9.002 0 0 1 10.049 2a9.942 9.942 0 0 0-5.12 
  2.735c-3.905 3.905-3.905 10.237 0 14.142 3.906 3.906 10.237 3.905 14.143 
  0a9.946 9.946 0 0 0 2.735-5.119A9.003 9.003 0 0 1 12 11.807z"></path>
</svg>`,
};
const info = profiles.map(({ network, usernam, url }) => {
  const icon = ICONS[network];
  const filtroLetra = network[0].toUpperCase();

  return {
    id: network,
    section: 'Redes Sociales',
    title: `Visitar ${network} de ${usernam}`,
    url,
    icon: `${icon}`,
    hotkey: `ctrl+${filtroLetra}`,
  };
});
---

<footer class="notPrint">
  Pulsa<kbd>Cmd</kbd> + <kbd>K</kbd> para abrir la paleta de comandos
</footer>
<ninja-keys
  class="notPrint"
  placeholder="type a command or search..."
  hideBreadcrumbs
  data-info={JSON.stringify(info)}
  data-icon={JSON.stringify(ICONS)}
>
</ninja-keys>

<script>
  import 'ninja-keys';
  let body = document.querySelector('body');

  const ninja = document.querySelector('ninja-keys');
  if (ninja != null) {
    const info = ninja.getAttribute('data-info') ?? '[]';
    const parseInfo = JSON.parse(info);

    const icons = ninja.getAttribute('data-icon') ?? '[]';
    const dataIcons = JSON.parse(icons);

    const data = parseInfo.map((item) => {
      return {
        ...item,
        handler: () => {
          window.open(item.url, '_blank');
        },
      };
    });

    ninja.data = [
      /* para crear un sub menu  */
      {
        id: 'Tema',
        title: 'Seleccionar Tema Web',
        icon: `${dataIcons['Menu']}`,
        section: 'Acciones',
        children: ['Dark Theme', 'Light Theme', 'System Theme'],
        handler: () => {
          ninja.open({ parent: 'Tema' });
          return { keepOpen: true };
        },
      },
      {
        id: 'Dark Theme',
        title: 'Tema Dark',
        icon: `${dataIcons['Dark']}`,
        parent: 'Tema',
        handler: () => {
          body.classList.add('dark');
          ninja.classList.add('dark');
        },
      },
      {
        id: 'Light Theme',
        title: 'Tema light',
        icon: `${dataIcons['Light']}`,
        parent: 'Tema',
        handler: () => {
          body.classList.remove('dark');
          ninja.classList.remove('dark');
        },
      },
      /* *** */
      {
        id: 'print',
        title: 'Imprimir',
        hotkey: 'ctrl+p',
        icon: `${dataIcons['Printer']}`,
        section: 'Acciones',
        handler: () => {
          window.print();
        },
      },
      ...data,
    ];
  }
</script>

<style>
  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
  footer {
    z-index: 1;
    background: var(--main-color);
    border-top: 1px solid var(--border);
    position: fixed;
    bottom: 0%;
    width: 100%;
    padding-block: 0.6rem;
    text-align: center;
    font-size: 0.8rem;

    view-timeline-name: --revealing;
    view-timeline-axis: block;

    animation: linear 0.5s fadeIn;
    animation-timeline: --revealing;
    animation-range: entry 100% cover 20%;
  }
  kbd {
    background-color: #eee;
    border: 1px solid #cfcfcfcb;

    border-radius: 4px;
    padding: 2px 4px;
    margin-left: 0.5rem;
    font-weight: 700;
    color: #333;
    box-shadow:
      0 1px 1px rgba(0, 0, 0, 0.2),
      0 2px 0 0 rgba(255, 255, 255, 0.7) inset;
  }
</style>

---
import { basics } from '@/jsons/cv-AP.json';
import Section from '@/components/Section.astro';
import Code from '@/icons/Code.astro';
import WorldMap from '@/icons/WorldMap.astro';
import Mail from '@/icons/Mail.astro';
import Phone from '@/icons/Phone.astro';
import GitHub from '@/icons/GitHub.astro';
import LinkedIn from '@/icons/LinkedIn.astro';

const {
  name,
  alias,
  label,
  image,
  email,
  phone,
  location,
  profiles,
} = basics;
/* const splitAlias = alias.split(''); */
const { city, address, region } = location;

const SOCIAL_ICONS = {
  GitHub,
  LinkedIn,
};
---

<Section id="Hero">
  <article class="container">
    <div class="info">
      <h1>
        {name}
        <Code />
        {
          alias.split('').map((value, key) => {
            return (
              <div
                class="letras"
                style={`--time:${key + 1}`}
              >
                {value}
              </div>
            );
          })
        }
      </h1>
      <h2>{label}</h2>
      <span>
        <WorldMap />
        {city} - {address}, {region}
      </span>
      <footer class="notPrint">
        {
          email && (
            <a
              href={`mailto:${email}`}
              title={`Contacte con ${alias} mediante el correo ${email}`}
              target="_blank"
            >
              <Mail />
            </a>
          )
        }
        {
          phone && (
            <a
              href={`tel:${phone}`}
              title={`Contacte con ${alias} mediante el numero ${phone}`}
              target="_blank"
              rel="noopener noreferrer"
            >
              <Phone />
            </a>
          )
        }
        {
          profiles.map(({ network, usernam, url }) => {
            const Icon = SOCIAL_ICONS[network];
            return (
              <a
                href={url}
                title={`Visita el perfil de ${usernam} en ${network}`}
                target="_blank"
                rel="noopener noreferrer"
              >
                <Icon />
              </a>
            );
          })
        }
      </footer>
      <footer class="print">
        {
          email && (
            <span>
              <Mail />
              {email}
            </span>
          )
        }
        {
          phone && (
            <span>
              <Phone />
              {phone}
            </span>
          )
        }
        <!-- {
          profiles.map(({ network, url }) => {
            const Icon = SOCIAL_ICONS[network];
            return (
              <span>
                <Icon />
                {url}
              </span>
            );
          })
        } -->
      </footer>
    </div>
    <!-- <figure>
      <dir class="notPrint">
        <img src={image} alt={alias} />
      </dir>
      <img src="./DAQM3D.jpg" alt={alias} />
      <h2>DAQM3D</h2>
    </figure> -->
    <figure>
      <dir class="notPrint">
        <img src={image} alt={alias} />
      </dir>
      <img src="./DAQM3D.jpg" alt={alias} />
      <h2>DAQM3D</h2>
    </figure>
  </article>
</Section>

<style>
  .container {
    display: grid;
    grid-template-columns: 4fr 1fr;
    justify-content: space-between;
    gap: 1rem;
    .info {
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
      h1 {
        font-size: 2rem;
        svg {
          margin: auto 5px;
        }
        div {
          display: unset;
          word-spacing: -0.4rem;
        }
      }
      h2 {
        color: #444;
        font-weight: 500;
        font-size: 1rem;
      }
      span {
        color: #666;
        display: flex;
        align-items: center;
        gap: 0.25rem;
        font-size: 0.85rem;
        letter-spacing: -0.05rem;
      }
    }

    :is(.info:hover) h1 svg {
      animation: 1s infinite alternate DAQM3D;
    }
    :is(.info:hover) h1 div.letras {
      animation: 1s linear forwards contarLetras;
    }
    :is(.info:hover) h1 div.letras {
      animation-delay: calc(var(--time) * 1s);
    }
  }

  footer {
    display: flex;
    gap: 4px;
    margin-top: 8px;
    a {
      padding: 5px;
      display: inline-flex;
      border: 1.5px solid #cfcfcfcb;
      border-radius: 5px;
      transition:
        background 0.3s ease-in-out,
        border 0.5s ease-in-out;
    }
    a:hover {
      background: #5bfa5b;
      border: 1.5px solid #18193f;
      svg {
        animation: 1s linear social;
      }
    }
  }
  figure {
    position: relative;
    width: 128px;
    height: 158px;
    > img {
      position: absolute;
      top: 0;
      left: 10%;
      opacity: 0;
      width: 80%;
      height: 80%;
      object-fit: cover;
      border-radius: 10%;

      /*transform: translateY(0);*/
      transition: 0.5s;
    }
    > h2 {
      position: absolute;
      bottom: 20px;
      left: 70%;
      transform: translateX(-50%);
      color: #fafafa;
      font-size: 1rem;
      background: #5bfa5b;
      width: 80%;
      text-align: center;
      padding: 5px 10px;
      border-radius: 10px;
      opacity: 0;
      text-shadow: #18193f 1px 1px 10px;
      transition: 0.5s;
    }
    dir {
      width: 100%;
      height: 100%;
      /* inset:0;
      background-color: #18193f;*/

      background: linear-gradient(#5bfa5b, #18193f);
      border-radius: 15px;
      transition: 0.5s;

      img {
        /*position: absolute;
        top: 0;
        left: 0; */
        width: 100%;
        object-fit: cover;
        transition: 0.5s;
        border-radius: inherit;
      }
    }
  }
  figure:hover dir {
    transform: perspective(900px) translateX(-5%)
      rotateX(25deg) translateZ(0);
    box-shadow: 2px 35px 32px -8px rgba(0, 0, 0, 0.75);
  }
  figure:hover dir img {
    opacity: 0;
  }
  figure:hover > img {
    opacity: 1;
    display: inherit;
    transform: translate3d(0%, -25%, 100px);
  }
  figure:hover > h2 {
    opacity: 1;
    transform: translate3d(-40%, 0%, 100px);

    /*    bottom: 20px; */
  }

  @media print {
    .info footer.print {
      display: grid;
      grid-template-columns: repeat(
        auto-fit,
        minmax(200px, 1fr)
      );
      gap: 0.5rem 1rem;
    }
    figure > img {
      opacity: 1;
      width: 100%;
      height: 100%;
    }
  }
</style>
